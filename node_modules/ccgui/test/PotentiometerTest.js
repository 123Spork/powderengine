/**
 * Created by Huabin LING on 1/2/14.
 */

var PotentiometerTest = GuiTest.extend({
    _displayValueLabel:null,
    
    ctor:function () {
        this._super();

        var winSize = cc.Director.getInstance().getWinSize();

        // Parent layer for better positioning
        var layer = cc.Node.create();
        layer.setPosition(winSize.width / 2, winSize.height / 2);
        this.addChild(layer, 1);

        var layer_width = 0;

        // Add the black background for the text
        var background = cc.Scale9Sprite.create(res.buttonBackground_png);
        background.setContentSize(80, 50);
        background.setPosition(layer_width + background.getContentSize().width / 2.0, 0);
        layer.addChild(background);

        layer_width += background.getContentSize().width;

        this._displayValueLabel = cc.LabelTTF.create("", "HelveticaNeue-Bold", 30);

        this._displayValueLabel.setPosition(background.getPosition());
        layer.addChild(this._displayValueLabel);

        // Add the slider
        var potentiometer = cc.ControlPotentiometer.create(res.potentiometerTrack_png
            , res.potentiometerProgress_png
            , res.potentiometerButton_png);
        potentiometer.setPosition(layer_width + 10 + potentiometer.getContentSize().width / 2, 0);

        // When the value of the slider will change, the given selector will be call
        potentiometer.addTargetWithActionForControlEvents(this, this.valueChanged, cc.CONTROL_EVENT_VALUECHANGED);

        layer.addChild(potentiometer);

        layer_width += potentiometer.getContentSize().width;

        // Set the layer size
        layer.setContentSize(layer_width, 0);
        layer.setAnchorPoint(0.5, 0.5);

        // Update the value label
        this.valueChanged(potentiometer, cc.CONTROL_EVENT_VALUECHANGED);
    },

    valueChanged:function (sender, controlEvent) {
        // Change value of label.
        this._displayValueLabel.setString(sender.getValue().toFixed(2));
    }
});
PotentiometerTest.create = function () {
    return new PotentiometerTest();
};