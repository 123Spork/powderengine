var TestNode = cc.Node.extend({
    _pString:"",

    ctor:function (str, priority) {
        this._super();
        this.init();
        this._pString = str;
        this.scheduleUpdateWithPriority(priority);
    },
    update:function(dt) {
        logTest( this._pString );
    }
});

var SchedulerUpdateTest = cc.Layer.extend({
    ctor : function(){
        this._super();

        var str = "---";
        var d = new TestNode(str,50);
        this.addChild(d);

        str = "3rd";
        var b = new TestNode(str,0);
        this.addChild(b);

        str = "1st";
        var a = new TestNode(str, -10);
        this.addChild(a);

        str = "4th";
        var c = new TestNode(str,10);
        this.addChild(c);

        str = "5th";
        var e = new TestNode(str,20);
        this.addChild(e);

        str = "2nd";
        var f = new TestNode(str,-5);
        this.addChild(f);

        this.schedule(this.onRemoveUpdates, 4.0);
    },
    onRemoveUpdates:function (dt) {
        var children = this.getChildren();
        for (var i = 0; i < children.length; i++) {
            var node = children[i];
            if (node)
                node.unscheduleAllCallbacks();
        }
    }
});

SchedulerUpdateTest.create = function(args){
    var layer = new SchedulerUpdateTest();
    return layer.init() ? layer : null;
};
