var TouchAllAtOnce = cc.Layer.extend({
    init : function(){
        this._super();

        this.ids = {};
        this.unused_sprites = [];

        if( 'touches' in sys.capabilities ) {
            // this is the default behavior. No need to set it explicitly.
            this.setTouchMode(cc.TOUCH_ALL_AT_ONCE);
            this.setTouchEnabled(true);
        } else {
            logTest("TOUCHES not supported");
        }

        for( var i=0; i < 5;i++) {
            var sprite = this.sprite = cc.Sprite.create(res.r2_png);
            this.addChild(sprite,i+10);
            sprite.setPosition(0,0);
            sprite.setScale(1);
            sprite.setColor( cc.c3b( Math.random()*200+55, Math.random()*200+55, Math.random()*200+55 ) );
            this.unused_sprites.push(sprite);
        }

        return true;
    },
    new_id:function( id, pos) {
        var s = this.unused_sprites.pop();
        this.ids[ id ] = s;
        s.setPosition( pos );
    },
    update_id:function(id, pos) {
        var s = this.ids[ id ];
        s.setPosition( pos );
    },
    release_id:function(id, pos) {
        var s = this.ids[ id ];
        this.ids[ id ] = null;
        this.unused_sprites.push( s );
        s.setPosition(0,0);
    },

    onTouchesBegan:function(touches, event) {
        for (var i=0; i < touches.length;i++ ) {
            var touch = touches[i];
            var pos = touch.getLocation();
            var id = touch.getId();
            logTest("Touch #" + i + ". onTouchesBegan at: " + pos.x + " " + pos.y + " Id:" + id);
            this.new_id(id,pos);
        }
    },
    onTouchesMoved:function(touches, event) {
        for (var i=0; i < touches.length;i++ ) {
            var touch = touches[i];
            var pos = touch.getLocation();
            var id = touch.getId();
            logTest("Touch #" + i + ". onTouchesMoved at: " + pos.x + " " + pos.y + " Id:" + id);
            this.update_id(id, pos);
        }
    },
    onTouchesEnded:function(touches, event) {
        for (var i=0; i < touches.length;i++ ) {
            var touch = touches[i];
            var pos = touch.getLocation();
            var id = touch.getId();
            logTest("Touch #" + i + ". onTouchesEnded at: " + pos.x + " " + pos.y + " Id:" + id);
            this.release_id(id);
        }
    },
    onTouchesCancelled:function(touches, event) {
        for (var i=0; i < touches.length;i++ ) {
            var touch = touches[i];
            var pos = touch.getLocation();
            var id = touch.getId();
            logTest("Touch #" + i + ". onTouchesCancelled at: " + pos.x + " " + pos.y + " Id:" + id);
            this.release_id(id);
        }
    }
});

TouchAllAtOnce.create = function(args){
    var layer = new TouchAllAtOnce();
    return layer.init() ? layer : null;
};
