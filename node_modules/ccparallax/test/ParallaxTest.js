/**
 * Created by Huabin LING on 12/31/13.
 */

var TAG_NODE = "Parallax_Node";

ParallaxTest = cc.Layer.extend({
    _root:null,
    _target:null,
    _streak:null,
    ctor:function () {
        this._super();

        // Top Layer, a simple image
        var cocosImage = cc.Sprite.create(res.powered_png);
        // scale the image (optional)
        cocosImage.setScale(1.5);
        // change the transform anchor point to 0,0 (optional)
        cocosImage.setAnchorPoint(0, 0);

        // Middle layer: a Tile map atlas
        var tilemap = cc.Sprite.create(res.orthogonal_test2_png);
        // change the transform anchor to 0,0 (optional)
        tilemap.setAnchorPoint(0, 0);

        // background layer: another image
        var background = cc.Sprite.create(res.background_png);
        // change the transform anchor point (optional)
        background.setAnchorPoint(0, 0);

        // create a void node, a parent node
        var voidNode = cc.ParallaxNode.create();
        // NOW add the 3 layers to the 'void' node

        // background image is moved at a ratio of 0.4x, 0.5y
        voidNode.addChild(background, -1, cc.p(0.4, 0.5), cc.p(0,0));

        // tiles are moved at a ratio of 1.0, 1.0y
        voidNode.addChild(tilemap, 1, cc.p(1.0, 1.0), cc.p(0, 0));

        // top image is moved at a ratio of 3.0x, 2.5y
        voidNode.addChild(cocosImage, 2, cc.p(3.0, 2.5), cc.p(250, 0));
        this.addChild(voidNode, 0, TAG_NODE);

        this.schedule(this.onParallaxMoving, 1)
    },

    onParallaxMoving:function(){
        var node = this.getChildByTag(TAG_NODE);
        var currentPos = node.getPosition();
        node.setPosition(cc.pAdd( currentPos, cc.p(30 * Math.random() - 15,20 * Math.random() - 10)));
    }
});

ParallaxTest.create = function() {
    return new ParallaxTest();
};