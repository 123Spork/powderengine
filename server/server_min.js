var http=require("http"),fs=require("fs"),io=require("socket.io"),fs=require("fs");
fs.readFile("config.txt","utf8",function(H,F){var w=parseInt(F.split("\n")[1]),m=[],h=[],p=[],k=[],n=[],e=[],x=[],c=[],q=[],r=[],s=[],t=[],u=[],v=[],l={};fs.readdirSync("./maps").forEach(function(b){x[parseInt(b.split(".")[0])]=require("./maps/"+b);n[parseInt(b.split(".")[0])]=0;p[parseInt(b.split(".")[0])]=[]});fs.readdirSync("./additionals").forEach(function(b){"warps.json"==b&&(q=require("./additionals/warps.json"));"items.json"==b&&(r=require("./additionals/items.json"));"skills.json"==b&&(s=
require("./additionals/skills.json"));"signs.json"==b&&(t=require("./additionals/signs.json"));"npcs.json"==b&&(u=require("./additionals/npcs.json"));"quests.json"==b&&(v=require("./additionals/quests.json"))});var c=require("./tools/updatedata.json"),y=http.createServer(function(b,a){a.writeHead(200,{"Content-Type":"text/html"});a.end("<h1>Hello Socket Lover!</h1>")});y.listen(w);w=io.listen(y);w.on("message",function(b){console.log("Received a message from the server!",b)});var G=function(b,a){fs.writeFile("maps/"+
b+".json",JSON.stringify(a),function(a){})},z=function(b){fs.writeFile("./additionals/warps.json",JSON.stringify(b),function(a){})},A=function(b){fs.writeFile("./additionals/items.json",JSON.stringify(b),function(a){})},B=function(b){fs.writeFile("./additionals/skills.json",JSON.stringify(b),function(a){})},C=function(b){fs.writeFile("./additionals/signs.json",JSON.stringify(b),function(a){})},D=function(b){fs.writeFile("./additionals/npcs.json",JSON.stringify(b),function(a){})},E=function(b){fs.writeFile("./additionals/quests.json",
JSON.stringify(b),function(a){})},f=function(){fs.writeFile("tools/updatedata.json",JSON.stringify(c),function(b){})};w.on("connection",function(b){b.on("message",function(a){a=JSON.parse(a);if(a.login){for(var d in e)if(e[d]==a.username){b.send(JSON.stringify({login_fail:"Username in use already."}));return}if(-1==e.indexOf(a.username)){b.send(JSON.stringify({login_success:!0}));e[b.id]=a.username;k[b.id]=b;h[a.username]=1;0==n[1]&&b.send(JSON.stringify({mapmaster:!0}));n[1]++;b.broadcast.send(JSON.stringify({newPlayer:a.username}));
for(d in k)d!=b.id&&k[d]&&(m[d]?(b.send(JSON.stringify({moveTo:m[d],id:e[d]})),b.send(JSON.stringify({changemap:h[e[d]],id:e[d],setTo:m[d]}))):b.send(JSON.stringify({moveTo:"default",id:e[d]})));for(d in l[1])b.send(JSON.stringify(l[1][d]));for(d in p[1])b.send(JSON.stringify({changeNPCPosition:p[1][d],npcID:d}))}}if(a.sync){var g={sync:!0};if(!c[0]||a.mapupdate<c[0])c[0]||(c[0]=Date.now(),f()),g.maptime=c[0],g.mapdata=x;if(!c[1]||a.warpupdate<c[1])c[1]||(c[1]=Date.now(),f()),g.warptime=c[1],g.warpdata=
q;if(!c[2]||a.itemupdate<c[2])c[2]||(c[2]=Date.now(),f()),g.itemtime=c[2],g.itemdata=r;if(!c[3]||a.skillsupdate<c[3])c[3]||(c[3]=Date.now(),f()),g.skillstime=c[3],g.skillsdata=s;if(!c[4]||a.signsupdate<c[4])c[4]||(c[4]=Date.now(),f()),g.signstime=c[4],g.signsdata=t;if(!c[5]||a.npcsupdate<c[5])c[5]||(c[5]=Date.now(),f()),g.npcstime=c[5],g.npcsdata=u;if(!c[6]||a.questsupdate<c[6])c[6]||(c[6]=Date.now(),f()),g.queststime=c[6],g.questdata=v;b.send(JSON.stringify(g))}a.moveTo&&(b.broadcast.send(JSON.stringify({moveTo:a.moveTo,
id:e[b.id]})),m[b.id]=a.moveTo);a.droppeditem&&(b.send(JSON.stringify({droppeditem:a.droppeditem,mapnumber:a.mapnumber,index:a.index})),b.broadcast.send(JSON.stringify({droppeditem:a.droppeditem,mapnumber:a.mapnumber,index:a.index})),l[a.mapnumber]||(l[a.mapnumber]=[]),l[a.mapnumber].push({droppeditem:a.droppeditem,mapnumber:a.mapnumber,index:a.index}));if(a.pickupitem&&(b.send(JSON.stringify({pickupitem:a.pickupitem,mapnumber:a.mapnumber})),b.broadcast.send(JSON.stringify({pickupitem:a.pickupitem,
mapnumber:a.mapnumber})),a.temp))for(g=l[a.mapnumber],d=g.length-1;0<=d;d--)if(g[d].index==a.pickupitem){l[a.mapnumber].splice(d,1);break}a.savemap&&(c[0]=Date.now(),f(),G(a.savemap,a.mapdata),x[a.savemap]=a.mapdata,a.updatetime=c[0],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.savewarps&&(c[1]=Date.now(),f(),q[parseInt(a.savewarps)]=a.warpdata,z(q),a.updatetime=c[1],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.savewarpswhole&&(c[1]=Date.now(),f(),q=a.savewarpswhole,
z(q),a.updatetime=c[1],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.saveitems&&(c[2]=Date.now(),f(),r[parseInt(a.saveitems)]=a.itemdata,A(r),a.updatetime=c[2],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.saveitemswhole&&(c[2]=Date.now(),f(),r=a.saveitemswhole,A(r),a.updatetime=c[2],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.savenpcs&&(c[5]=Date.now(),f(),u[parseInt(a.savenpcs)]=a.npcsdata,D(u),a.updatetime=c[5],b.broadcast.send(JSON.stringify(a)),
b.send(JSON.stringify(a)));a.savenpcswhole&&(c[5]=Date.now(),f(),u=a.savenpcswhole,D(u),a.updatetime=c[5],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.savequests&&(c[6]=Date.now(),f(),v[parseInt(a.savequests)]=a.questdata,E(v),a.updatetime=c[6],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.savequestswhole&&(c[6]=Date.now(),f(),v=a.savequestswhole,E(v),a.updatetime=c[6],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.moveNPC&&(b.broadcast.send(JSON.stringify(a)),
p[a.mapnumber][a.npcID]=a.moveNPC);a.saveskills&&(c[3]=Date.now(),f(),s[parseInt(a.saveskills)]=a.skillsdata,B(s),a.updatetime=c[3],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.saveskillswhole&&(c[3]=Date.now(),f(),s=a.saveskillswhole,B(s),a.updatetime=c[3],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.savesigns&&(c[4]=Date.now(),f(),t[parseInt(a.savesigns)]=a.signsdata,C(t),a.updatetime=c[4],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.savesignswhole&&
(c[4]=Date.now(),f(),t=a.savesignswhole,C(t),a.updatetime=c[4],b.broadcast.send(JSON.stringify(a)),b.send(JSON.stringify(a)));a.chatMessage&&b.broadcast.send(JSON.stringify({chatMessage:e[b.id]+": "+a.chatMessage}));a.logout&&(b.broadcast.send(JSON.stringify({playerLeft:e[b.id]})),e[b.id]=void 0,m[b.id]=void 0);a.disconnect&&(b.broadcast.send(JSON.stringify({playerLeft:e[b.id]})),k[b.id]=void 0,e[b.id]=void 0,m[b.id]=void 0);if(a.changemap){b.broadcast.send(JSON.stringify({id:e[b.id],changemap:a.changemap,
setTo:a.setTo}));0==n[a.changemap]&&b.send(JSON.stringify({mapmaster:!0}));n[a.changemap]++;if(h[e[b.id]])for(d in g=h[e[b.id]],n[h[e[b.id]]]--,h[e[b.id]]=a.changemap,k)if(h[e[d]]==g){console.log("New Master is "+d);k[d].send(JSON.stringify({mapmaster:!0}));break}for(d in l[a.changemap])b.send(JSON.stringify({droppeditem:l[a.changemap][d].droppeditem,mapnumber:a.changemap,index:l[a.changemap][d].index}));for(d in p[a.changemap])b.send(JSON.stringify({changeNPCPosition:p[a.changemap][d],npcID:d}))}a.diceroll&&
b.broadcast.send(JSON.stringify({diceroll:a.diceroll}));a.coinflip&&b.broadcast.send(JSON.stringify({coinflip:a.coinflip}));a.dance&&b.broadcast.send(JSON.stringify({dance:a.dance}));a.afk&&(Math.random(),b.broadcast.send(JSON.stringify({afk:e[b.id]})))});b.on("disconnect",function(){var a=h[e[b.id]];b.broadcast.send(JSON.stringify({playerLeft:e[b.id]}));b.send(JSON.stringify({disconnect:!0}));console.log(e[b.id]+" HAS DISCONNECTED");n[h[e[b.id]]]--;h[e[b.id]]=void 0;k[b.id]=void 0;e[b.id]=void 0;
m[b.id]=void 0;for(var c in k)if(k[c]&&h[e[c]]==a){k[c].send(JSON.stringify({mapmaster:!0}));break}})})});