var http=require("http"),fs=require("fs"),io=require("socket.io"),fs=require("fs");
fs.readFile("config.txt","utf8",function(q,n){var h=parseInt(n.split("\n")[1]),f=[],g=[],c=[],k=[],e=[];fs.readdirSync("./maps").forEach(function(a){k[parseInt(a.split(".")[0])]=require("./maps/"+a)});var e=require("./tools/updatedata.json"),l=http.createServer(function(a,b){b.writeHead(200,{"Content-Type":"text/html"});b.end("<h1>Hello Socket Lover!</h1>")});l.listen(h);h=io.listen(l);h.on("message",function(a){console.log("Received a message from the server!",a)});var p=function(a,b){fs.writeFile("maps/"+
a+".json",JSON.stringify(b),function(a){})},m=function(){fs.writeFile("tools/updatedata.json",JSON.stringify(e),function(a){})};h.on("connection",function(a){a.on("message",function(b){b=JSON.parse(b);if(b.login){for(var d in c)if(c[d]==b.username){a.send(JSON.stringify({login_fail:"Username in use already."}));return}if(-1==c.indexOf(b.username))for(d in a.send(JSON.stringify({login_success:!0})),c[a.id]=b.username,g[a.id]=!0,a.broadcast.send(JSON.stringify({newPlayer:b.username})),g)d!=a.id&&!0==
g[d]&&(f[d]?a.send(JSON.stringify({moveTo:f[d],id:c[d]})):a.send(JSON.stringify({moveTo:"default",id:c[d]})))}if(b.sync){d={sync:!0};if(!e[0]||b.mapupdate<e[0])e[0]||(e[0]=Date.now(),m()),d.maptime=e[0],d.mapdata=k;a.send(JSON.stringify(d))}b.moveTo&&(a.broadcast.send(JSON.stringify({moveTo:b.moveTo,id:c[a.id]})),f[a.id]=b.moveTo);b.savemap&&(e[0]=Date.now(),m(),p(b.savemap,b.mapdata),k[b.savemap]=b.mapdata,b.updatetime=e[0],a.broadcast.send(JSON.stringify(b)),a.send(JSON.stringify(b)));b.chatMessage&&
a.broadcast.send(JSON.stringify({chatMessage:c[a.id]+": "+b.chatMessage}));b.logout&&(a.broadcast.send(JSON.stringify({playerLeft:c[a.id]})),c[a.id]=void 0,f[a.id]=void 0);b.disconnect&&(a.broadcast.send(JSON.stringify({playerLeft:c[a.id]})),g[a.id]=void 0,c[a.id]=void 0,f[a.id]=void 0);b.changemap&&a.broadcast.send(JSON.stringify({id:c[a.id],changemap:b.changemap,setTo:b.setTo}));b.diceroll&&a.broadcast.send(JSON.stringify({diceroll:b.diceroll}));b.coinflip&&a.broadcast.send(JSON.stringify({coinflip:b.coinflip}));
b.dance&&a.broadcast.send(JSON.stringify({dance:b.dance}));b.afk&&(Math.random(),a.broadcast.send(JSON.stringify({afk:c[a.id]})))});a.on("disconnect",function(){a.broadcast.send(JSON.stringify({playerLeft:c[a.id]}));a.send(JSON.stringify({disconnect:!0}));console.log("CLIENT HAS DISCONNECTED");g[a.id]=void 0;c[a.id]=void 0;f[a.id]=void 0})})});