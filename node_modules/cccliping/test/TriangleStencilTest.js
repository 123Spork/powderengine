/**
 * Created by Huabin LING on 1/2/14.
 */

var TriangleStencilTest = cc.LayerGradient.extend({
    _clipper: null,
    _content: null,
    _stencil: null,

    ctor: function() {
        this._super();
        this.init( cc.c4b(0,0,0,255), cc.c4b(98,99,117,255) );

        var width = 100, height = 100, winSize = cc.Director.getInstance().getWinSize();

        // Create triangle stencil with DrawNode
        this._stencil = cc.DrawNode.create();
        var triangle = [cc.p(-width, -height),cc.p(width, -height), cc.p(0, height)];
        var green = cc.c4f(0, 1, 0, 1);
        this._stencil.drawPoly(triangle, green, 3, green);
        this._stencil.setPosition(width/2, height/2);

        // Create clipping node, set its stencil and add it to the layer
        this._clipper = cc.ClippingNode.create();
        this._clipper.setContentSize(width, height);
        this._clipper.setAnchorPoint(0.5, 0.5);
        this._clipper.setPosition(winSize.width / 2, winSize.height / 2);
        this._clipper.setStencil(this._stencil);
        this.addChild(this._clipper);

        // Create sprite as content of clipping node
        this._content = cc.Sprite.create(res.grossini_png);
        this._content.setScale(1.5);
        this._content.setPosition(width/2, height/2);
        this._clipper.addChild(this._content);

        this.scheduleUpdate();
    },

    update: function() {
        // Rotate the stencil to see if the clip effect is right
        var rotation = this._stencil.getRotation();
        if(rotation >= 359) {
            this._stencil.setRotation(0);
        }
        else this._stencil.setRotation(rotation+1);
    }
});

TriangleStencilTest.create = function() {
    return new TriangleStencilTest();
}