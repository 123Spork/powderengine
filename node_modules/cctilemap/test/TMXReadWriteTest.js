var TMXReadWriteTest = cc.Layer.extend({
    gid:0,
    init : function(){
        this._super();

        var map = cc.TMXTiledMap.create(res.orthogonal_test2_tmx);
        this.addChild(map, 0, 1);

        var s = map.getContentSize();

        var layer = map.getLayer("Layer 0");
        if ("opengl" in sys.capabilities)
            layer.getTexture().setAntiAliasTexParameters();

        map.setScale(1);

        var tile0 = layer.getTileAt(cc.p(1, 63));
        var tile1 = layer.getTileAt(cc.p(2, 63));
        var tile2 = layer.getTileAt(cc.p(3, 62));//cc.p(1,62));
        var tile3 = layer.getTileAt(cc.p(2, 62));

        tile0.setAnchorPoint(0.5, 0.5);
        tile1.setAnchorPoint(0.5, 0.5);
        tile2.setAnchorPoint(0.5, 0.5);
        tile3.setAnchorPoint(0.5, 0.5);

        this.gid = layer.getTileGIDAt(cc.p(0, 63));

        this.schedule(this.updateCol, 2.0);
        this.schedule(this.repaintWithGID, 2.0);
        this.schedule(this.removeTiles, 1.0);

        this.gid2 = 0;

        return true;
    },
    onRemoveSprite:function (sender) {
        var p = sender.getParent();
        if (p) {
            p.removeChild(sender, true);
        }
    },
    updateCol:function (dt) {
        var map = this.getChildByTag(1);
        var layer = map.getChildByTag(0);

        var s = layer.getLayerSize();

        for (var y = 0; y < s.height; y++) {
            layer.setTileGID(this.gid2, cc.p(3, y));
        }

        this.gid2 = (this.gid2 + 1) % 80;
    },
    repaintWithGID:function (dt) {

        var map = this.getChildByTag(1);
        var layer = map.getChildByTag(0);

        var s = layer.getLayerSize();
        for (var x = 0; x < s.width; x++) {
            var y = s.height - 1;
            var tmpgid = layer.getTileGIDAt(cc.p(x, y));
            layer.setTileGID(tmpgid + 1, cc.p(x, y));
        }
    },
    removeTiles:function (dt) {
        this.unschedule(this.removeTiles);

        var map = this.getChildByTag(1);

        var layer = map.getChildByTag(0);
        var s = layer.getLayerSize();

        for (var y = 0; y < s.height; y++) {
            layer.removeTileAt(cc.p(5.0, y));
        }
    }
});

TMXReadWriteTest.create = function(args){
    var layer = new TMXReadWriteTest();
    return layer.init() ? layer : null;
};
