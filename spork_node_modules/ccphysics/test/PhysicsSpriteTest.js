
var GRABABLE_MASK_BIT = 1<<31;
var NOT_GRABABLE_MASK = ~GRABABLE_MASK_BIT;
var PhysicsSprite = cc.Layer.extend({
    init:function(){
        this._super();
        this.space = new cp.Space();
        this.setupDebugNode();
        var space = this.space;
        space.iterations = 60;
        space.gravity = cp.v(0, -500);
        space.sleepTimeThreshold = 0.5;
        space.collisionSlop = 0.5;
        space.sleepTimeThreshold = 0.5;

        this.addFloor();
        this.addWalls();

        var width = 50;
        var height = 60;
        var mass = width * height * 1/1000;
        var rock = space.addBody(new cp.Body(mass, cp.momentForBox(mass, width, height)));
        rock.setPos(cp.v(500, 100));
        rock.setAngle(1);
        shape = space.addShape(new cp.BoxShape(rock, width, height));
        shape.setFriction(0.3);
        shape.setElasticity(0.3);

        for (var i = 1; i <= 10; i++) {
            var radius = 20;
            mass = 3;
            var body = space.addBody(new cp.Body(mass, cp.momentForCircle(mass, 0, radius, cp.v(0, 0))));
            body.setPos(cp.v(200 + i, (2 * radius + 5) * i));
            var circle = space.addShape(new cp.CircleShape(body, radius, cp.v(0, 0)));
            circle.setElasticity(0.8);
            circle.setFriction(1);
        }
        var ramp = space.addShape(new cp.SegmentShape(space.staticBody, cp.v(100, 100), cp.v(300, 200), 10));
        ramp.setElasticity(1);
        ramp.setFriction(1);
        ramp.setLayers(NOT_GRABABLE_MASK);
        this._debugNode.setVisible( true );

        this.scheduleUpdate();
        return true;
    }
});
PhysicsSprite.prototype.update = function(dt) {
    this.space.step(dt);
};

PhysicsSprite.prototype.addFloor = function() {
    var space = this.space;
    var floor = space.addShape(new cp.SegmentShape(space.staticBody, cp.v(0, 0), cp.v(640, 0), 0));
    floor.setElasticity(1);
    floor.setFriction(1);
    floor.setLayers(NOT_GRABABLE_MASK);
};

PhysicsSprite.prototype.addWalls = function() {
    var space = this.space;
    var wall1 = space.addShape(new cp.SegmentShape(space.staticBody, cp.v(0, 0), cp.v(0, 480), 0));
    wall1.setElasticity(1);
    wall1.setFriction(1);
    wall1.setLayers(NOT_GRABABLE_MASK);

    var wall2 = space.addShape(new cp.SegmentShape(space.staticBody, cp.v(640, 0), cp.v(640, 480), 0));
    wall2.setElasticity(1);
    wall2.setFriction(1);
    wall2.setLayers(NOT_GRABABLE_MASK);
};
PhysicsSprite.prototype.setupDebugNode = function(){
    // debug only
    this._debugNode = cc.PhysicsDebugNode.create( this.space );
    this._debugNode.setVisible( false );
    this.addChild( this._debugNode );
};


PhysicsSprite.create = function(args){
    var layer = new PhysicsSprite();
    return layer.init() ? layer : null;
}