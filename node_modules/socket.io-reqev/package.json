{
  "name": "socket.io-reqev",
  "main": "io-reqev.js",
  "version": "0.1.4",
  "private": false,
  "dependencies": {
    "underscore": "*"
  },
  "files": [
    "io-reqev.js",
    "dist/io-reqev-client.js",
    "LICENSE"
  ],
  "readmeFilename": "README.md",
  "gitHead": "ea4e57c6ba2f3a4010ea04c6ade28ead5ed76e11",
  "description": "A framework for [socket.io](http://socket.io/) (server and client).",
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/takeshy/socket.io-reqev.git"
  },
  "keywords": [
    "socket.io"
  ],
  "author": {
    "name": "Takeshi Morita"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/takeshy/socket.io-reqev/issues"
  },
  "readme": "# socket.io-reqev \n\nA framework for [socket.io](http://socket.io/) (server and client).\n\nIt is designed to  make pub-sub and GET request easier.\nIt allows you to write less code and easy to understand.\n\nsocket.io-reqev ties a path to an object and ties an event to a room.\n\n# Install\n\n    npm install socket.io-reqev\n\n## How to use\n\nserver(node.js)\n\n```js\nvar events = require('events');\n\nvar Sample = function(time){\n  setInterval(function(){this.emit(\"alarm\", {time: new Date().toString()})}.bind(this),time);\n  this.events = [\"alarm\"];\n}\nSample.prototype = new events.EventEmitter();\nSample.prototype.request = function(req,cb){ return req == \"now\" ?  cb(null,new Date().toString()) : cb(\"invalid\")}\n\nvar IOReqEv = require('socket.io-reqev');\nvar ioReqEv = new IOReqEv(require('socket.io').listen(50000));\n\nioReqEv.register(\"/sample\",new Sample(1000));\nioReqEv.register(\"/sample1\",new Sample(10000));\n\n```\n\nclient(browser)\n\n```js\n//<script src=\"http://cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.16/socket.io.min.js\"></script>\n//<script src=\"https://raw.github.com/takeshy/socket.io-reqev/master/dist/io-reqev-client.js\"></script>\nsock = new IOReqEvClient(\"http://localhost:50000/timer\", function(obj){console.log(obj)})\nsock.watch({requests: [\"now\"],events: [\"alarm\"]})\n// when no need to use.\n// sock.unwatch() \n```\n\n# API\n\n## Node.js\n\n### Server()\n\n  Create a new `server` with Socket.IO object. \n\n  ```js\n    var IOReqEv = require('socket.io-reqev')`\n    var ioReqEv = new IOReqEv(require('socket.io').listen(50000));\n  ```\n\n### register(path:string,service:object)\n\n- path is tied path of socket.io url(SocketIO Host Name + /path) \n\n- service consists two parts.\n\n  - events\n\n    (optional) it is array and including event names.\n    if the object emits an event included this field,socket.io-reqev \n    sends to the subscribers that event.\n\n  - request\n\n    (optional)it is method function(reqest,callback). param request is a request of requests\n    from a client. param callback is a function(error,value).\n    when this method completes the request, this method shuold call the\n    callback with the value and socket.io-recv replies the value to the client.\n\n\n## Browser\n\n### IOReqEvClient(url:string,callback:function,errorCallback:function)\n- url socket.io host + path\n- callback it is called when socket.io host  replies successful.\n- errorCallback it is called when socket.io host  replies unsuccessful.\n\n### watch(requests:array,events:array)\n\nyou call this method whenever you want.\n\n- requests(optional)\n\nAn array of request. Each request passes server side object's method named 'request'.\nit is similar to HTTP GET but you can include multiple requests at once.\n\n- events(optional)\n\nAn array of event name you want to subscribe. \nif you called watch already,socket-io-recv unsubscribes befores events. \nFor that reason,if you want to keep subscribe,you should include all events\nyou want subscribe or if events is not passed or null,socket-io-recv\nsubscribing befores events.\nif you don't subscribe any event anymore,you should set empty array.\n\n### unwatch()\n  you don't need any request and event,then you call this method.\n\n\n# demo\n\nif you don't understand, you can use demo and view demo/app.js and\ndemo/index.html.\n\n    git clone https://github.com/takeshy/socket.io-reqev.git\n    cd socket.io-reqev/demo\n    npm install\n    node app.js\n\n- browser\n\n  http://localhost:8080\n\n\n# License\n\nMIT\n\n",
  "homepage": "https://github.com/takeshy/socket.io-reqev",
  "_id": "socket.io-reqev@0.1.4",
  "dist": {
    "shasum": "97180d4ca2e294fc2e1787021f85a15e0d4dc289"
  },
  "_from": "socket.io-reqev@",
  "_resolved": "https://registry.npmjs.org/socket.io-reqev/-/socket.io-reqev-0.1.4.tgz"
}
