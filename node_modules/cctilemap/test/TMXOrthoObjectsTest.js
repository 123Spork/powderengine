var TMXOrthoObjectsTest = cc.Layer.extend({
    init : function(){
        this._super();

        var map = cc.TMXTiledMap.create(res.ortho_objects_tmx);
        this.addChild(map, 0, 1);

        var group = map.getObjectGroup("Object Group 1");
        var array = group.getObjects();
        var dict;
        for (var i = 0, len = array.length; i < len; i++) {
            dict = array[i];
            if (!dict)
                break;
            for (var k in dict)
                logTest(k + ' = ' + dict[k]);
        }
        //Automation parameters
        this.testObjects = array;
        this.setAnchorPoint(0, 0);
        return true;
    },
    draw:function () {
        var map = this.getChildByTag(1);
        var group = map.getObjectGroup("Object Group 1");
        var objects = group.getObjects();

        for (var i = 0; i < objects.length; i++) {
            var dict = objects[i];
            if (!dict)
                break;

            var x = dict["x"];
            var y = dict["y"];
            var width = dict["width"];
            var height = dict["height"];

            cc.renderContext.lineWidth = 3;
            cc.renderContext.strokeStyle = "#ffffff";

            cc.drawingUtil.drawLine(cc.p(x, y), cc.p((x + width), y));
            cc.drawingUtil.drawLine(cc.p((x + width), y), cc.p((x + width), (y + height)));
            cc.drawingUtil.drawLine(cc.p((x + width), (y + height)), cc.p(x, (y + height)));
            cc.drawingUtil.drawLine(cc.p(x, (y + height)), cc.p(x, y));

            cc.renderContext.lineWidth = 1;
        }
    }
});

TMXOrthoObjectsTest.create = function(args){
    var layer = new TMXOrthoObjectsTest();
    return layer.init() ? layer : null;
};
