var cc = cc || {};
cc.resCfg = cc.resCfg || {};
var js = js || {};
var resCfg = cc.resCfg;
var jsRes = js.cocos2d_html5;
var TEST_BASE = "__testBase";

resCfg["cocos2d-html5"] = {
    ref : [//Base references for the project.
        jsRes.CCClass_js,
        jsRes.CCGeometry_js,
        jsRes.Sys_js,
        jsRes.CCConfig_js,
        jsRes.miniFramework_js,
        jsRes.CCCommon_js,
        jsRes.CCMacro_js,
        jsRes.CCFileUtils_js,
        jsRes.CCTypes_js,
        jsRes.CCEGLView_js,
        jsRes.CCScreen_js,
        jsRes.CCVisibleRect_js,
        jsRes.CCNS_js,
        jsRes.CCAffineTransform_js,
        jsRes.CCPointExtension_js,
        jsRes.CCVertex_js,
        jsRes.TransformUtils_js,
        jsRes.CCNode_js,
        jsRes.CCAtlasNode_js,
        jsRes.CCTexture2D_js,
        jsRes.CCTextureCache_js,
        jsRes.CCTextureAtlas_js,
        jsRes.CCScene_js,
        jsRes.CCLayer_js,
        jsRes.CCSprite_js,
        jsRes.CCAnimation_js,
        jsRes.CCAnimationCache_js,
        jsRes.CCSpriteFrame_js,
        jsRes.CCSpriteFrameCache_js,
        jsRes.CCSpriteBatchNode_js,
        jsRes.CCConfiguration_js,
        jsRes.CCDirector_js,
        jsRes.CCCamera_js,
        jsRes.CCScheduler_js,
        jsRes.CCLoader_js,
        jsRes.CCDrawingPrimitives_js,
        jsRes.CCApplication_js,
        jsRes.CCSAXParser_js,
        jsRes.AppControl_js,
        jsRes.CCLabelTTF_js,
        jsRes.CCActionManager_js
    ]
};

resCfg[TEST_BASE] = {res : [res.grossini_dance_atlas_png, res.grossinis_sister1_png, res.grossinis_sister2_png, res.grossini_png,
    res.tcc_issue_1_png, res.tcc_issue_1_plist, res.tcc_issue_2_png, res.tcc_issue_2_plist]};

cc.gameModules = [ jsRes.CCNodeTest2_js, jsRes.CCNodeTest6_js, jsRes.BoundingBoxTest_js,
    //--- cc.node tests end
    jsRes.Sprite1Test_js, jsRes.SpriteBatchNode1Test_js, jsRes.SpriteColorOpacity_js, jsRes.SpriteZOrder_js, jsRes.SpriteNilTexture_js, jsRes.TextureColorCacheIssue_js,
    //--- cc.Sprite tests end
    jsRes.SchedulerAutoremoveTest_js, jsRes.SchedulerPauseResumeTest_js, jsRes.SchedulerUnscheduleAllTest_js, jsRes.SchedulerUnscheduleAllHardTest_js,
    jsRes.SchedulerUpdateTest_js, jsRes.SchedulerUpdateAndCustomTest_js, jsRes.ScheduleUsingSchedulerTest_js,
    //--- cc.Scheduler tests end
    jsRes.LayerTest1_js, jsRes.IgnoreAnchorpointTest1_js, jsRes.LayerGradientTest_js,
    //--- Layer tests end
    jsRes.LabelTTFMultiline_js, jsRes.LabelTTFChinese_js, jsRes.LabelTTFA8Test_js, jsRes.LabelTTFAlignment_js
    //--- LabelTTF tests end
];

resCfg[jsRes.Sprite1Test_js] = { layer : "Sprite1Test", title : "Non Batched Sprite" };
resCfg[jsRes.SpriteBatchNode1Test_js] = { layer : "SpriteBatchNode1Test", title : "Batched Sprite" };
resCfg[jsRes.SpriteColorOpacity_js] = { layer : "SpriteColorOpacity", title : "Sprite: Color & Opacity" };
resCfg[jsRes.SpriteZOrder_js] = { layer : "SpriteZOrder", title : "Sprite: Z order" };
resCfg[jsRes.SpriteNilTexture_js] = { layer : "SpriteNilTexture", title : "Sprite without texture -- [opacity and color should work]" };
resCfg[jsRes.TextureColorCacheIssue_js] = { layer : "TextureColorCacheIssue", title : "Texture Color Cache Issue Test -- [You should see two different sprites colored green and blue]" };

resCfg[jsRes.CCNodeTest2_js] = { layer : "CCNodeTest2", title : "anchorPoint and children" };
resCfg[jsRes.CCNodeTest6_js] = { layer : "CCNodeTest6", title : "remove/cleanup with children" };
resCfg[jsRes.BoundingBoxTest_js] = { layer : "BoundingBoxTest", title : "Bounding Box Test -- [Testing getBoundingBox(). See console]" };

resCfg[jsRes.SchedulerAutoremoveTest_js] = { layer : "SchedulerAutoremoveTest", title : "Self-remove an scheduler -- [1 scheduler will be auto Removed in 3 seconds. See console]" };
resCfg[jsRes.SchedulerPauseResumeTest_js] = { layer : "SchedulerPauseResumeTest", title : "Pause / Resume -- [Scheduler should be paused after 3 seconds. See console]" };
resCfg[jsRes.SchedulerUnscheduleAllTest_js] = { layer : "SchedulerUnscheduleAllTest", title : "Unschedule All callbacks -- [All scheduled callbacks will be unscheduled in 4 seconds. See console]" };
resCfg[jsRes.SchedulerUnscheduleAllHardTest_js] = { layer : "SchedulerUnscheduleAllHardTest", title : "Unschedule All callbacks #2 -- [Unschedules all callbacks after 4s. Uses CCScheduler. See console]" };
resCfg[jsRes.SchedulerUpdateTest_js] = { layer : "SchedulerUpdateTest", title : "Schedule update with priority -- [3 scheduled updates. Priority should work. Stops in 4s. See console]" };
resCfg[jsRes.SchedulerUpdateAndCustomTest_js] = { layer : "SchedulerUpdateAndCustomTest", title : "Schedule Update + custom callback -- [Update + custom callback at the same time. Stops in 4s. See console]" };
resCfg[jsRes.ScheduleUsingSchedulerTest_js] = { layer : "ScheduleUsingSchedulerTest", title : "Schedule / Unschedule using Scheduler -- [After 5 seconds all callbacks should be removed]" };

resCfg[jsRes.LayerTest1_js] = { layer : "LayerTest1", title : "ColorLayer resize" };
resCfg[jsRes.IgnoreAnchorpointTest1_js] = { layer : "IgnoreAnchorpointTest1", title : "ignore Anchorpoint Test #1 -- [red:true  green:true]" };
resCfg[jsRes.LayerGradientTest_js] = { layer : "LayerGradientTest", title : "LayerGradient Test" };

resCfg[jsRes.LabelTTFMultiline_js] = { layer : "LabelTTFMultiline", title : "Testing cc.LabelTTF Word Wrap" };
resCfg[jsRes.LabelTTFChinese_js] = { layer : "LabelTTFChinese", title : "Testing cc.LabelTTF with Chinese character" };
resCfg[jsRes.LabelTTFA8Test_js] = { layer : "LabelTTFA8Test", title : "Testing A8 Format" };
resCfg[jsRes.LabelTTFAlignment_js] = { layer : "LabelTTFAlignment", title : "cc.LabelTTF alignment" };